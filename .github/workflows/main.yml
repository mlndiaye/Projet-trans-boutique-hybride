name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: backend:latest

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Build Angular app
      working-directory: ./frontend
      run: |
        npm install
        npm run build --prod

    - name: Deploy to PythonAnywhere
      env:
        PA_TOKEN: ${{ secrets.PYTHONANYWHERE_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
        PA_PROJECT_NAME: ${{ secrets.PA_PROJECT_NAME }}
      run: |
        # Mise à jour du code source sur PythonAnywhere
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"command": "cd /home/'$PA_USERNAME'/'$PA_PROJECT_NAME' && git pull origin main"}' \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/
  
        # Installer les dépendances Python (si nécessaire)
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"command": "cd /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/backend && pip install -r requirements.txt"}' \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/
  
        # Copier les fichiers du frontend build vers le dossier static du backend
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"command": "mkdir -p /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/backend/static/angular && cp -r /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/frontend/dist/* /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/backend/static/angular/"}' \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/
  
        # Collecter les fichiers statiques
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"command": "cd /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/backend && python manage.py collectstatic --noinput"}' \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/
  
        # Appliquer les migrations de la base de données (si nécessaire)
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"command": "cd /home/'$PA_USERNAME'/'$PA_PROJECT_NAME'/backend && python manage.py migrate"}' \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/consoles/
  
        # Recharger l'application
        curl -X POST \
          -H "Authorization: Token $PA_TOKEN" \
          https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/webapps/$PA_USERNAME.pythonanywhere.com/reload/